{% extends '@EasyAdmin/crud/index.html.twig' %}

{% block content_title %}
    {{ 'Email Management'|trans }}
{% endblock %}

{% block page_actions %}
    <a href="{{ path('admin', {
        crudAction: 'verifyEmails',
        crudControllerFqcn: 'App\\Controller\\Admin\\EmailCrudController'
    }) }}" id="verify-emails-button" class="btn btn-primary">
        Verify Emails
    </a>
    {{ parent() }}
{% endblock %}

{% block body %}
    {{ parent() }}


    <div id="verification-result" class="mt-3" style="display: none;">
        <div class="progress">
            <div
                    id="progress-bar"
                    class="progress-bar"
                    role="progressbar"
                    style="width: 0%;"
                    aria-valuenow="0"
                    aria-valuemin="0"
                    aria-valuemax="100">
                0%
            </div>
        </div>
        <p id="status-text" class="mt-3">Starting verification...</p>
    </div>
{% endblock %}

{% block configured_javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const button = document.querySelector('#verify-emails-button');
            const progressBar = document.getElementById('progress-bar');
            const statusText = document.getElementById('status-text');
            const verificationResult = document.getElementById('verification-result');

            button.addEventListener('click', function (evt) {
                evt.preventDefault();

                button.disabled = true;
                verificationResult.style.display = 'block';

                let page = 1;
                const limit = 10;

                function fetchEmails() {
                    fetch(`${button.href}&page=${page}&limit=${limit}`, {
                        method: 'POST',
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest',
                        },
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                let completed = 0;
                                const total = data.results.length;

                                data.results.forEach((result, index) => {
                                    setTimeout(() => {
                                        completed++;
                                        const progress = Math.round((completed / total) * 100);
                                        progressBar.style.width = `${progress}%`;
                                        progressBar.setAttribute('aria-valuenow', `${progress}`);
                                        progressBar.textContent = `${progress}%`;

                                        if (completed === total) {
                                            if (data.hasNextPage) {
                                                page = data.nextPage;
                                                fetchEmails();
                                            } else {
                                                statusText.textContent = 'Verification completed successfully!';
                                                button.disabled = false;
                                            }
                                        }
                                    }, index * 500);
                                });
                            } else {
                                statusText.textContent = 'Verification failed.';
                                button.disabled = false;
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            statusText.textContent = 'Error occurred while verifying emails.';
                            button.disabled = false;
                        });
                }

                fetchEmails();
            });
        });
    </script>
{% endblock %}
